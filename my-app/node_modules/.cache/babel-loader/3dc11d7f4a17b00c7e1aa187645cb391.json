{"ast":null,"code":"import { deregAll, isDefined, removeFrom, root } from '../common';\nimport { buildUrl, getParams, parseUrl } from './utils';\n/** A base `LocationServices` */\n\nvar BaseLocationServices =\n/** @class */\nfunction () {\n  function BaseLocationServices(router, fireAfterUpdate) {\n    var _this = this;\n\n    this.fireAfterUpdate = fireAfterUpdate;\n    this._listeners = [];\n\n    this._listener = function (evt) {\n      return _this._listeners.forEach(function (cb) {\n        return cb(evt);\n      });\n    };\n\n    this.hash = function () {\n      return parseUrl(_this._get()).hash;\n    };\n\n    this.path = function () {\n      return parseUrl(_this._get()).path;\n    };\n\n    this.search = function () {\n      return getParams(parseUrl(_this._get()).search);\n    };\n\n    this._location = root.location;\n    this._history = root.history;\n  }\n\n  BaseLocationServices.prototype.url = function (url, replace) {\n    if (replace === void 0) {\n      replace = true;\n    }\n\n    if (isDefined(url) && url !== this._get()) {\n      this._set(null, null, url, replace);\n\n      if (this.fireAfterUpdate) {\n        this._listeners.forEach(function (cb) {\n          return cb({\n            url: url\n          });\n        });\n      }\n    }\n\n    return buildUrl(this);\n  };\n\n  BaseLocationServices.prototype.onChange = function (cb) {\n    var _this = this;\n\n    this._listeners.push(cb);\n\n    return function () {\n      return removeFrom(_this._listeners, cb);\n    };\n  };\n\n  BaseLocationServices.prototype.dispose = function (router) {\n    deregAll(this._listeners);\n  };\n\n  return BaseLocationServices;\n}();\n\nexport { BaseLocationServices };","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAAgDC,UAAhD,EAA4DC,IAA5D,QAAwE,WAAxE;AAIA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,SAA9C;AAEA;;AACA;AAAA;AAAA;EAOE,8BAAYC,MAAZ,EAAqCC,eAArC,EAA6D;IAA7D;;IAAqC;IAN7B,kBAAyB,EAAzB;;IAIR,iBAAY,UAACC,GAAD,EAAI;MAAK,YAAI,CAACC,UAAL,CAAgBC,OAAhB,CAAwB,UAACC,EAAD,EAAG;QAAK,SAAE,CAACH,GAAD,CAAF;MAAO,CAAvC;IAAwC,CAA7D;;IAkCA,YAAO;MAAM,eAAQ,CAACI,KAAI,CAACC,IAAL,EAAD,CAAR,CAAsBC,IAAtB;IAA0B,CAAvC;;IACA,YAAO;MAAM,eAAQ,CAACF,KAAI,CAACC,IAAL,EAAD,CAAR,CAAsBE,IAAtB;IAA0B,CAAvC;;IACA,cAAS;MAAM,gBAAS,CAACV,QAAQ,CAACO,KAAI,CAACC,IAAL,EAAD,CAAR,CAAsBG,MAAvB,CAAT;IAAuC,CAAtD;;IAjCE,KAAKC,SAAL,GAAiBf,IAAI,CAACgB,QAAtB;IACA,KAAKC,QAAL,GAAgBjB,IAAI,CAACkB,OAArB;EACD;;EAiCDC,+CAAIC,GAAJ,EAAkBC,OAAlB,EAAgC;IAAd;MAAAA;IAAc;;IAC9B,IAAIvB,SAAS,CAACsB,GAAD,CAAT,IAAkBA,GAAG,KAAK,KAAKT,IAAL,EAA9B,EAA2C;MACzC,KAAKW,IAAL,CAAU,IAAV,EAAgB,IAAhB,EAAsBF,GAAtB,EAA2BC,OAA3B;;MAEA,IAAI,KAAKhB,eAAT,EAA0B;QACxB,KAAKE,UAAL,CAAgBC,OAAhB,CAAwB,UAACC,EAAD,EAAG;UAAK,SAAE,CAAC;YAAEW,GAAG;UAAL,CAAD,CAAF;QAAW,CAA3C;MACD;IACF;;IAED,OAAOnB,QAAQ,CAAC,IAAD,CAAf;EACD,CAVD;;EAYAkB,oDAASV,EAAT,EAA0B;IAA1B;;IACE,KAAKF,UAAL,CAAgBgB,IAAhB,CAAqBd,EAArB;;IACA,OAAO;MAAM,iBAAU,CAACC,KAAI,CAACH,UAAN,EAAkBE,EAAlB,CAAV;IAA+B,CAA5C;EACD,CAHD;;EAKAU,mDAAQf,MAAR,EAAwB;IACtBP,QAAQ,CAAC,KAAKU,UAAN,CAAR;EACD,CAFD;;EAGF;AAAC,CA/DD","names":["deregAll","isDefined","removeFrom","root","buildUrl","getParams","parseUrl","router","fireAfterUpdate","evt","_listeners","forEach","cb","_this","_get","hash","path","search","_location","location","_history","history","BaseLocationServices","url","replace","_set","push"],"sources":["C:\\Users\\huang\\node_modules\\@uirouter\\core\\lib-esm\\vanilla\\@uirouter\\core\\vanilla\\baseLocationService.ts"],"sourcesContent":["import { deregAll, isDefined, LocationServices, removeFrom, root } from '../common';\nimport { Disposable } from '../interface';\nimport { UIRouter } from '../router';\nimport { HistoryLike, LocationLike } from './interface';\nimport { buildUrl, getParams, parseUrl } from './utils';\n\n/** A base `LocationServices` */\nexport abstract class BaseLocationServices implements LocationServices, Disposable {\n  private _listeners: Function[] = [];\n  _location: LocationLike;\n  _history: HistoryLike;\n\n  _listener = (evt) => this._listeners.forEach((cb) => cb(evt));\n\n  constructor(router: UIRouter, public fireAfterUpdate: boolean) {\n    this._location = root.location;\n    this._history = root.history;\n  }\n\n  /**\n   * This should return the current internal URL representation.\n   *\n   * The internal URL includes only the portion that UI-Router matches.\n   * It does not include:\n   * - protocol\n   * - server\n   * - port\n   * - base href or hash\n   */\n  protected abstract _get(): string;\n\n  /**\n   * This should set the current URL.\n   *\n   * The `url` param should include only the portion that UI-Router matches on.\n   * It should not include:\n   * - protocol\n   * - server\n   * - port\n   * - base href or hash\n   *\n   * However, after this function completes, the browser URL should reflect the entire (fully qualified)\n   * HREF including those data.\n   */\n  protected abstract _set(state: any, title: string, url: string, replace: boolean);\n\n  hash = () => parseUrl(this._get()).hash;\n  path = () => parseUrl(this._get()).path;\n  search = () => getParams(parseUrl(this._get()).search);\n\n  url(url?: string, replace = true): string {\n    if (isDefined(url) && url !== this._get()) {\n      this._set(null, null, url, replace);\n\n      if (this.fireAfterUpdate) {\n        this._listeners.forEach((cb) => cb({ url }));\n      }\n    }\n\n    return buildUrl(this);\n  }\n\n  onChange(cb: EventListener) {\n    this._listeners.push(cb);\n    return () => removeFrom(this._listeners, cb);\n  }\n\n  dispose(router: UIRouter) {\n    deregAll(this._listeners);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}