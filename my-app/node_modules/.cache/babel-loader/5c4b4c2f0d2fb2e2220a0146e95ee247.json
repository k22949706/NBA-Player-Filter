{"ast":null,"code":"import { copy } from '../common/common';\n/**\n * A [[TransitionHookFn]] which updates global UI-Router state\n *\n * Registered using `transitionService.onBefore({}, updateGlobalState);`\n *\n * Before a [[Transition]] starts, updates the global value of \"the current transition\" ([[Globals.transition]]).\n * After a successful [[Transition]], updates the global values of \"the current state\"\n * ([[Globals.current]] and [[Globals.$current]]) and \"the current param values\" ([[Globals.params]]).\n *\n * See also the deprecated properties:\n * [[StateService.transition]], [[StateService.current]], [[StateService.params]]\n */\n\nvar updateGlobalState = function (trans) {\n  var globals = trans.router.globals;\n\n  var transitionSuccessful = function () {\n    globals.successfulTransitions.enqueue(trans);\n    globals.$current = trans.$to();\n    globals.current = globals.$current.self;\n    copy(trans.params(), globals.params);\n  };\n\n  var clearCurrentTransition = function () {\n    // Do not clear globals.transition if a different transition has started in the meantime\n    if (globals.transition === trans) globals.transition = null;\n  };\n\n  trans.onSuccess({}, transitionSuccessful, {\n    priority: 10000\n  });\n  trans.promise.then(clearCurrentTransition, clearCurrentTransition);\n};\n\nexport var registerUpdateGlobalState = function (transitionService) {\n  return transitionService.onCreate({}, updateGlobalState);\n};","map":{"version":3,"mappings":"AACA,SAASA,IAAT,QAAqB,kBAArB;AAGA;;;;;;;;;;;;;AAYA,IAAMC,iBAAiB,GAAG,UAACC,KAAD,EAAkB;EAC1C,IAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaD,OAA7B;;EAEA,IAAME,oBAAoB,GAAG;IAC3BF,OAAO,CAACG,qBAAR,CAA8BC,OAA9B,CAAsCL,KAAtC;IACAC,OAAO,CAACK,QAAR,GAAmBN,KAAK,CAACO,GAAN,EAAnB;IACAN,OAAO,CAACO,OAAR,GAAkBP,OAAO,CAACK,QAAR,CAAiBG,IAAnC;IAEAX,IAAI,CAACE,KAAK,CAACU,MAAN,EAAD,EAAiBT,OAAO,CAACS,MAAzB,CAAJ;EACD,CAND;;EAQA,IAAMC,sBAAsB,GAAG;IAC7B;IACA,IAAIV,OAAO,CAACW,UAAR,KAAuBZ,KAA3B,EAAkCC,OAAO,CAACW,UAAR,GAAqB,IAArB;EACnC,CAHD;;EAKAZ,KAAK,CAACa,SAAN,CAAgB,EAAhB,EAAoBV,oBAApB,EAA0C;IAAEW,QAAQ,EAAE;EAAZ,CAA1C;EACAd,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmBL,sBAAnB,EAA2CA,sBAA3C;AACD,CAlBD;;AAoBA,OAAO,IAAMM,yBAAyB,GAAG,UAACC,iBAAD,EAAqC;EAC5E,wBAAiB,CAACC,QAAlB,CAA2B,EAA3B,EAA+BpB,iBAA/B;AAAiD,CAD5C","names":["copy","updateGlobalState","trans","globals","router","transitionSuccessful","successfulTransitions","enqueue","$current","$to","current","self","params","clearCurrentTransition","transition","onSuccess","priority","promise","then","registerUpdateGlobalState","transitionService","onCreate"],"sources":["C:\\Users\\huang\\node_modules\\@uirouter\\core\\lib-esm\\hooks\\@uirouter\\core\\hooks\\updateGlobals.ts"],"sourcesContent":["import { Transition } from '../transition/transition';\nimport { copy } from '../common/common';\nimport { TransitionService } from '../transition/transitionService';\n\n/**\n * A [[TransitionHookFn]] which updates global UI-Router state\n *\n * Registered using `transitionService.onBefore({}, updateGlobalState);`\n *\n * Before a [[Transition]] starts, updates the global value of \"the current transition\" ([[Globals.transition]]).\n * After a successful [[Transition]], updates the global values of \"the current state\"\n * ([[Globals.current]] and [[Globals.$current]]) and \"the current param values\" ([[Globals.params]]).\n *\n * See also the deprecated properties:\n * [[StateService.transition]], [[StateService.current]], [[StateService.params]]\n */\nconst updateGlobalState = (trans: Transition) => {\n  const globals = trans.router.globals;\n\n  const transitionSuccessful = () => {\n    globals.successfulTransitions.enqueue(trans);\n    globals.$current = trans.$to();\n    globals.current = globals.$current.self;\n\n    copy(trans.params(), globals.params);\n  };\n\n  const clearCurrentTransition = () => {\n    // Do not clear globals.transition if a different transition has started in the meantime\n    if (globals.transition === trans) globals.transition = null;\n  };\n\n  trans.onSuccess({}, transitionSuccessful, { priority: 10000 });\n  trans.promise.then(clearCurrentTransition, clearCurrentTransition);\n};\n\nexport const registerUpdateGlobalState = (transitionService: TransitionService) =>\n  transitionService.onCreate({}, updateGlobalState);\n"]},"metadata":{},"sourceType":"module"}