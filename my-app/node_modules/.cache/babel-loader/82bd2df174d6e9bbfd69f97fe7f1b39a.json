{"ast":null,"code":"import { stripLastPathElement } from '../common';\nimport { UrlRuleFactory } from './urlRule';\n\nfunction appendBasePath(url, isHtml5, absolute, baseHref) {\n  if (baseHref === '/') return url;\n  if (isHtml5) return stripLastPathElement(baseHref) + url;\n  if (absolute) return baseHref.slice(1) + url;\n  return url;\n}\n/**\n * Updates URL and responds to URL changes\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRules]] which can be found as [[UrlService.rules]].\n */\n\n\nvar UrlRouter =\n/** @class */\nfunction () {\n  /** @internal */\n  function UrlRouter(\n  /** @internal */\n  router) {\n    var _this = this;\n\n    this.router = router; // Delegate these calls to [[UrlService]]\n\n    /** @deprecated use [[UrlService.sync]]*/\n\n    this.sync = function (evt) {\n      return _this.router.urlService.sync(evt);\n    };\n    /** @deprecated use [[UrlService.listen]]*/\n\n\n    this.listen = function (enabled) {\n      return _this.router.urlService.listen(enabled);\n    };\n    /** @deprecated use [[UrlService.deferIntercept]]*/\n\n\n    this.deferIntercept = function (defer) {\n      return _this.router.urlService.deferIntercept(defer);\n    };\n    /** @deprecated use [[UrlService.match]]*/\n\n\n    this.match = function (urlParts) {\n      return _this.router.urlService.match(urlParts);\n    }; // Delegate these calls to [[UrlRules]]\n\n    /** @deprecated use [[UrlRules.initial]]*/\n\n\n    this.initial = function (handler) {\n      return _this.router.urlService.rules.initial(handler);\n    };\n    /** @deprecated use [[UrlRules.otherwise]]*/\n\n\n    this.otherwise = function (handler) {\n      return _this.router.urlService.rules.otherwise(handler);\n    };\n    /** @deprecated use [[UrlRules.removeRule]]*/\n\n\n    this.removeRule = function (rule) {\n      return _this.router.urlService.rules.removeRule(rule);\n    };\n    /** @deprecated use [[UrlRules.rule]]*/\n\n\n    this.rule = function (rule) {\n      return _this.router.urlService.rules.rule(rule);\n    };\n    /** @deprecated use [[UrlRules.rules]]*/\n\n\n    this.rules = function () {\n      return _this.router.urlService.rules.rules();\n    };\n    /** @deprecated use [[UrlRules.sort]]*/\n\n\n    this.sort = function (compareFn) {\n      return _this.router.urlService.rules.sort(compareFn);\n    };\n    /** @deprecated use [[UrlRules.when]]*/\n\n\n    this.when = function (matcher, handler, options) {\n      return _this.router.urlService.rules.when(matcher, handler, options);\n    };\n\n    this.urlRuleFactory = new UrlRuleFactory(router);\n  }\n  /** Internal API. */\n\n\n  UrlRouter.prototype.update = function (read) {\n    var $url = this.router.locationService;\n\n    if (read) {\n      this.location = $url.url();\n      return;\n    }\n\n    if ($url.url() === this.location) return;\n    $url.url(this.location, true);\n  };\n  /**\n   * Internal API.\n   *\n   * Pushes a new location to the browser history.\n   *\n   * @internal\n   * @param urlMatcher\n   * @param params\n   * @param options\n   */\n\n\n  UrlRouter.prototype.push = function (urlMatcher, params, options) {\n    var replace = options && !!options.replace;\n    this.router.urlService.url(urlMatcher.format(params || {}), replace);\n  };\n  /**\n   * Builds and returns a URL with interpolated parameters\n   *\n   * #### Example:\n   * ```js\n   * matcher = $umf.compile(\"/about/:person\");\n   * params = { person: \"bob\" };\n   * $bob = $urlRouter.href(matcher, params);\n   * // $bob == \"/about/bob\";\n   * ```\n   *\n   * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n   * @param params An object of parameter values to fill the matcher's required parameters.\n   * @param options Options object. The options are:\n   *\n   * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n   *\n   * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n   */\n\n\n  UrlRouter.prototype.href = function (urlMatcher, params, options) {\n    var url = urlMatcher.format(params);\n    if (url == null) return null;\n    options = options || {\n      absolute: false\n    };\n    var cfg = this.router.urlService.config;\n    var isHtml5 = cfg.html5Mode();\n\n    if (!isHtml5 && url !== null) {\n      url = '#' + cfg.hashPrefix() + url;\n    }\n\n    url = appendBasePath(url, isHtml5, options.absolute, cfg.baseHref());\n\n    if (!options.absolute || !url) {\n      return url;\n    }\n\n    var slash = !isHtml5 && url ? '/' : '';\n    var cfgPort = cfg.port();\n    var port = cfgPort === 80 || cfgPort === 443 ? '' : ':' + cfgPort;\n    return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n  };\n\n  Object.defineProperty(UrlRouter.prototype, \"interceptDeferred\", {\n    /** @deprecated use [[UrlService.interceptDeferred]]*/\n    get: function () {\n      return this.router.urlService.interceptDeferred;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return UrlRouter;\n}();\n\nexport { UrlRouter };","map":{"version":3,"mappings":"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","names":["stripLastPathElement","UrlRuleFactory","appendBasePath","url","isHtml5","absolute","baseHref","slice","router","evt","urlService","sync","enabled","listen","defer","deferIntercept","urlParts","match","handler","rules","initial","otherwise","rule","removeRule","compareFn","sort","matcher","options","when","urlRuleFactory","UrlRouter","read","$url","locationService","location","urlMatcher","params","replace","format","cfg","config","html5Mode","hashPrefix","slash","cfgPort","port","protocol","host","join","Object","interceptDeferred"],"sources":["C:\\Users\\huang\\node_modules\\@uirouter\\core\\lib-esm\\url\\@uirouter\\core\\url\\urlRouter.ts"],"sourcesContent":["import { stripLastPathElement } from '../common';\nimport { UrlMatcher } from './urlMatcher';\nimport { RawParams } from '../params';\nimport { UIRouter } from '../router';\nimport { UrlRuleFactory } from './urlRule';\nimport { MatchResult, UrlParts, UrlRule, UrlRuleHandlerFn } from './interface';\nimport { TargetState, TargetStateDef } from '../state';\n\nfunction appendBasePath(url: string, isHtml5: boolean, absolute: boolean, baseHref: string): string {\n  if (baseHref === '/') return url;\n  if (isHtml5) return stripLastPathElement(baseHref) + url;\n  if (absolute) return baseHref.slice(1) + url;\n  return url;\n}\n\n/**\n * Updates URL and responds to URL changes\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRules]] which can be found as [[UrlService.rules]].\n */\nexport class UrlRouter {\n  /** used to create [[UrlRule]] objects for common cases */\n  public urlRuleFactory: UrlRuleFactory;\n  /** @internal */ private location: string;\n\n  /** @internal */\n  constructor(/** @internal */ private router: UIRouter) {\n    this.urlRuleFactory = new UrlRuleFactory(router);\n  }\n\n  /** Internal API. */\n  update(read?: boolean) {\n    const $url = this.router.locationService;\n    if (read) {\n      this.location = $url.url();\n      return;\n    }\n    if ($url.url() === this.location) return;\n\n    $url.url(this.location, true);\n  }\n\n  /**\n   * Internal API.\n   *\n   * Pushes a new location to the browser history.\n   *\n   * @internal\n   * @param urlMatcher\n   * @param params\n   * @param options\n   */\n  push(urlMatcher: UrlMatcher, params?: RawParams, options?: { replace?: string | boolean }) {\n    const replace = options && !!options.replace;\n    this.router.urlService.url(urlMatcher.format(params || {}), replace);\n  }\n\n  /**\n   * Builds and returns a URL with interpolated parameters\n   *\n   * #### Example:\n   * ```js\n   * matcher = $umf.compile(\"/about/:person\");\n   * params = { person: \"bob\" };\n   * $bob = $urlRouter.href(matcher, params);\n   * // $bob == \"/about/bob\";\n   * ```\n   *\n   * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n   * @param params An object of parameter values to fill the matcher's required parameters.\n   * @param options Options object. The options are:\n   *\n   * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n   *\n   * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n   */\n  href(urlMatcher: UrlMatcher, params?: any, options?: { absolute: boolean }): string {\n    let url = urlMatcher.format(params);\n    if (url == null) return null;\n\n    options = options || { absolute: false };\n\n    const cfg = this.router.urlService.config;\n    const isHtml5 = cfg.html5Mode();\n    if (!isHtml5 && url !== null) {\n      url = '#' + cfg.hashPrefix() + url;\n    }\n    url = appendBasePath(url, isHtml5, options.absolute, cfg.baseHref());\n\n    if (!options.absolute || !url) {\n      return url;\n    }\n\n    const slash = !isHtml5 && url ? '/' : '';\n    const cfgPort = cfg.port();\n    const port = <any>(cfgPort === 80 || cfgPort === 443 ? '' : ':' + cfgPort);\n\n    return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n  }\n\n  // Delegate these calls to [[UrlService]]\n  /** @deprecated use [[UrlService.sync]]*/\n  public sync = (evt?) => this.router.urlService.sync(evt);\n  /** @deprecated use [[UrlService.listen]]*/\n  public listen = (enabled?: boolean): Function => this.router.urlService.listen(enabled);\n  /** @deprecated use [[UrlService.deferIntercept]]*/\n  public deferIntercept = (defer?: boolean) => this.router.urlService.deferIntercept(defer);\n  /** @deprecated use [[UrlService.interceptDeferred]]*/\n  public get interceptDeferred() {\n    return this.router.urlService.interceptDeferred;\n  }\n  /** @deprecated use [[UrlService.match]]*/\n  public match = (urlParts: UrlParts): MatchResult => this.router.urlService.match(urlParts);\n\n  // Delegate these calls to [[UrlRules]]\n  /** @deprecated use [[UrlRules.initial]]*/\n  public initial = (handler: string | UrlRuleHandlerFn | TargetState | TargetStateDef): void =>\n    this.router.urlService.rules.initial(handler);\n  /** @deprecated use [[UrlRules.otherwise]]*/\n  public otherwise = (handler: string | UrlRuleHandlerFn | TargetState | TargetStateDef): void =>\n    this.router.urlService.rules.otherwise(handler);\n  /** @deprecated use [[UrlRules.removeRule]]*/\n  public removeRule = (rule: UrlRule): void => this.router.urlService.rules.removeRule(rule);\n  /** @deprecated use [[UrlRules.rule]]*/\n  public rule = (rule: UrlRule): Function => this.router.urlService.rules.rule(rule);\n  /** @deprecated use [[UrlRules.rules]]*/\n  public rules = (): UrlRule[] => this.router.urlService.rules.rules();\n  /** @deprecated use [[UrlRules.sort]]*/\n  public sort = (compareFn?: (a: UrlRule, b: UrlRule) => number) => this.router.urlService.rules.sort(compareFn);\n  /** @deprecated use [[UrlRules.when]]*/\n  public when = (\n    matcher: RegExp | UrlMatcher | string,\n    handler: string | UrlRuleHandlerFn,\n    options?: { priority: number }\n  ): UrlRule => this.router.urlService.rules.when(matcher, handler, options);\n}\n"]},"metadata":{},"sourceType":"module"}