{"ast":null,"code":"import { BrowserLocationConfig } from './browserLocationConfig';\nimport { HashLocationService } from './hashLocationService';\nimport { locationPluginFactory } from './utils';\nimport { PushStateLocationService } from './pushStateLocationService';\nimport { MemoryLocationService } from './memoryLocationService';\nimport { MemoryLocationConfig } from './memoryLocationConfig';\nimport { $injector } from './injector';\nimport { $q } from './q';\nimport { services } from '../common/coreservices';\nexport function servicesPlugin(router) {\n  services.$injector = $injector;\n  services.$q = $q;\n  return {\n    name: 'vanilla.services',\n    $q: $q,\n    $injector: $injector,\n    dispose: function () {\n      return null;\n    }\n  };\n}\n/** A `UIRouterPlugin` uses the browser hash to get/set the current location */\n\nexport var hashLocationPlugin = locationPluginFactory('vanilla.hashBangLocation', false, HashLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location using the browser's `location` and `history` apis */\n\nexport var pushStateLocationPlugin = locationPluginFactory('vanilla.pushStateLocation', true, PushStateLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location from an in-memory object */\n\nexport var memoryLocationPlugin = locationPluginFactory('vanilla.memoryLocation', false, MemoryLocationService, MemoryLocationConfig);","map":{"version":3,"mappings":"AAAA,SAASA,qBAAT,QAAsC,yBAAtC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,qBAAT,QAAsC,SAAtC;AAGA,SAASC,wBAAT,QAAyC,4BAAzC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,EAAT,QAAmB,KAAnB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,OAAM,SAAUC,cAAV,CAAyBC,MAAzB,EAAyC;EAC7CF,QAAQ,CAACF,SAAT,GAAqBA,SAArB;EACAE,QAAQ,CAACD,EAAT,GAAcA,EAAd;EAEA,OAAO;IAAEI,IAAI,EAAE,kBAAR;IAA4BJ,EAAE,IAA9B;IAAgCD,SAAS,WAAzC;IAA2CM,OAAO,EAAE;MAAM;IAAI;EAA9D,CAAP;AACD;AAED;;AACA,OAAO,IAAMC,kBAAkB,GAAyCX,qBAAqB,CAC3F,0BAD2F,EAE3F,KAF2F,EAG3FD,mBAH2F,EAI3FD,qBAJ2F,CAAtF;AAOP;;AACA,OAAO,IAAMc,uBAAuB,GAAyCZ,qBAAqB,CAChG,2BADgG,EAEhG,IAFgG,EAGhGC,wBAHgG,EAIhGH,qBAJgG,CAA3F;AAOP;;AACA,OAAO,IAAMe,oBAAoB,GAAyCb,qBAAqB,CAC7F,wBAD6F,EAE7F,KAF6F,EAG7FE,qBAH6F,EAI7FC,oBAJ6F,CAAxF","names":["BrowserLocationConfig","HashLocationService","locationPluginFactory","PushStateLocationService","MemoryLocationService","MemoryLocationConfig","$injector","$q","services","servicesPlugin","router","name","dispose","hashLocationPlugin","pushStateLocationPlugin","memoryLocationPlugin"],"sources":["C:\\Users\\huang\\node_modules\\@uirouter\\core\\lib-esm\\vanilla\\@uirouter\\core\\vanilla\\plugins.ts"],"sourcesContent":["import { BrowserLocationConfig } from './browserLocationConfig';\nimport { HashLocationService } from './hashLocationService';\nimport { locationPluginFactory } from './utils';\nimport { LocationPlugin, ServicesPlugin } from './interface';\nimport { UIRouter } from '../router';\nimport { PushStateLocationService } from './pushStateLocationService';\nimport { MemoryLocationService } from './memoryLocationService';\nimport { MemoryLocationConfig } from './memoryLocationConfig';\nimport { $injector } from './injector';\nimport { $q } from './q';\nimport { services } from '../common/coreservices';\n\nexport function servicesPlugin(router: UIRouter): ServicesPlugin {\n  services.$injector = $injector;\n  services.$q = $q;\n\n  return { name: 'vanilla.services', $q, $injector, dispose: () => null };\n}\n\n/** A `UIRouterPlugin` uses the browser hash to get/set the current location */\nexport const hashLocationPlugin: (router: UIRouter) => LocationPlugin = locationPluginFactory(\n  'vanilla.hashBangLocation',\n  false,\n  HashLocationService,\n  BrowserLocationConfig\n);\n\n/** A `UIRouterPlugin` that gets/sets the current location using the browser's `location` and `history` apis */\nexport const pushStateLocationPlugin: (router: UIRouter) => LocationPlugin = locationPluginFactory(\n  'vanilla.pushStateLocation',\n  true,\n  PushStateLocationService,\n  BrowserLocationConfig\n);\n\n/** A `UIRouterPlugin` that gets/sets the current location from an in-memory object */\nexport const memoryLocationPlugin: (router: UIRouter) => LocationPlugin = locationPluginFactory(\n  'vanilla.memoryLocation',\n  false,\n  MemoryLocationService,\n  MemoryLocationConfig\n);\n"]},"metadata":{},"sourceType":"module"}