{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { root, trimHashVal } from '../common';\nimport { BaseLocationServices } from './baseLocationService';\n/** A `LocationServices` that uses the browser hash \"#\" to get/set the current location */\n\nvar HashLocationService =\n/** @class */\nfunction (_super) {\n  __extends(HashLocationService, _super);\n\n  function HashLocationService(router) {\n    var _this = _super.call(this, router, false) || this;\n\n    root.addEventListener('hashchange', _this._listener, false);\n    return _this;\n  }\n\n  HashLocationService.prototype._get = function () {\n    return trimHashVal(this._location.hash);\n  };\n\n  HashLocationService.prototype._set = function (state, title, url, replace) {\n    this._location.hash = url;\n  };\n\n  HashLocationService.prototype.dispose = function (router) {\n    _super.prototype.dispose.call(this, router);\n\n    root.removeEventListener('hashchange', this._listener);\n  };\n\n  return HashLocationService;\n}(BaseLocationServices);\n\nexport { HashLocationService };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,WAAf,QAAkC,WAAlC;AAEA,SAASC,oBAAT,QAAqC,uBAArC;AAEA;;AACA;AAAA;AAAA;EAAyCC;;EACvC,6BAAYC,MAAZ,EAA4B;IAA5B,YACEC,kBAAMD,MAAN,EAAc,KAAd,KAAoB,IADtB;;IAEEJ,IAAI,CAACM,gBAAL,CAAsB,YAAtB,EAAoCC,KAAI,CAACC,SAAzC,EAAoD,KAApD;;EACD;;EAEDC;IACE,OAAOR,WAAW,CAAC,KAAKS,SAAL,CAAeC,IAAhB,CAAlB;EACD,CAFD;;EAGAF,+CAAKG,KAAL,EAAiBC,KAAjB,EAAgCC,GAAhC,EAA6CC,OAA7C,EAA6D;IAC3D,KAAKL,SAAL,CAAeC,IAAf,GAAsBG,GAAtB;EACD,CAFD;;EAIAL,kDAAQL,MAAR,EAAwB;IACtBC,iBAAMW,OAAN,CAAaC,IAAb,CAAa,IAAb,EAAcb,MAAd;;IACAJ,IAAI,CAACkB,mBAAL,CAAyB,YAAzB,EAAuC,KAAKV,SAA5C;EACD,CAHD;;EAIF;AAAC,CAjBD,CAAyCN,oBAAzC","names":["root","trimHashVal","BaseLocationServices","__extends","router","_super","addEventListener","_this","_listener","HashLocationService","_location","hash","state","title","url","replace","dispose","call","removeEventListener"],"sources":["C:\\Users\\huang\\node_modules\\@uirouter\\core\\lib-esm\\vanilla\\@uirouter\\core\\vanilla\\hashLocationService.ts"],"sourcesContent":["import { root, trimHashVal } from '../common';\nimport { UIRouter } from '../router';\nimport { BaseLocationServices } from './baseLocationService';\n\n/** A `LocationServices` that uses the browser hash \"#\" to get/set the current location */\nexport class HashLocationService extends BaseLocationServices {\n  constructor(router: UIRouter) {\n    super(router, false);\n    root.addEventListener('hashchange', this._listener, false);\n  }\n\n  _get() {\n    return trimHashVal(this._location.hash);\n  }\n  _set(state: any, title: string, url: string, replace: boolean) {\n    this._location.hash = url;\n  }\n\n  dispose(router: UIRouter) {\n    super.dispose(router);\n    root.removeEventListener('hashchange', this._listener);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}