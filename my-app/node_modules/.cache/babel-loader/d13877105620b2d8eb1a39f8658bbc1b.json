{"ast":null,"code":"/**\n * A [[TransitionHookFn]] that rejects the Transition if it is invalid\n *\n * This hook is invoked at the end of the onBefore phase.\n * If the transition is invalid (for example, param values do not validate)\n * then the transition is rejected.\n */\nfunction invalidTransitionHook(trans) {\n  if (!trans.valid()) {\n    throw new Error(trans.error().toString());\n  }\n}\n\nexport var registerInvalidTransitionHook = function (transitionService) {\n  return transitionService.onBefore({}, invalidTransitionHook, {\n    priority: -10000\n  });\n};","map":{"version":3,"mappings":"AAGA;;;;;;;AAOA,SAASA,qBAAT,CAA+BC,KAA/B,EAAgD;EAC9C,IAAI,CAACA,KAAK,CAACC,KAAN,EAAL,EAAoB;IAClB,MAAM,IAAIC,KAAJ,CAAUF,KAAK,CAACG,KAAN,GAAcC,QAAd,EAAV,CAAN;EACD;AACF;;AAED,OAAO,IAAMC,6BAA6B,GAAG,UAACC,iBAAD,EAAqC;EAChF,wBAAiB,CAACC,QAAlB,CAA2B,EAA3B,EAA+BR,qBAA/B,EAAsD;IAAES,QAAQ,EAAE,CAAC;EAAb,CAAtD;AAA2E,CADtE","names":["invalidTransitionHook","trans","valid","Error","error","toString","registerInvalidTransitionHook","transitionService","onBefore","priority"],"sources":["C:\\Users\\huang\\node_modules\\@uirouter\\core\\lib-esm\\hooks\\@uirouter\\core\\hooks\\invalidTransition.ts"],"sourcesContent":["import { TransitionService } from '../transition/transitionService';\nimport { Transition } from '../transition/transition';\n\n/**\n * A [[TransitionHookFn]] that rejects the Transition if it is invalid\n *\n * This hook is invoked at the end of the onBefore phase.\n * If the transition is invalid (for example, param values do not validate)\n * then the transition is rejected.\n */\nfunction invalidTransitionHook(trans: Transition) {\n  if (!trans.valid()) {\n    throw new Error(trans.error().toString());\n  }\n}\n\nexport const registerInvalidTransitionHook = (transitionService: TransitionService) =>\n  transitionService.onBefore({}, invalidTransitionHook, { priority: -10000 });\n"]},"metadata":{},"sourceType":"module"}