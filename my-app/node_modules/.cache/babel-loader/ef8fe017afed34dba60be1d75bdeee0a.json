{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-empty-function */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/**\n * # Angular 1 types\n *\n * UI-Router core provides various Typescript types which you can use for code completion and validating parameter values, etc.\n * The customizations to the core types for Angular UI-Router are documented here.\n *\n * The optional [[$resolve]] service is also documented here.\n *\n * @preferred @publicapi @module ng1\n */\n\n/** */\nimport { ng as angular } from './angular';\nimport { services, applyPairs, isString, trace, extend, UIRouter, unnestR } from '@uirouter/core';\nimport { ng1ViewsBuilder, getNg1ViewConfigFactory } from './statebuilders/views';\nimport { TemplateFactory } from './templateFactory';\nimport { StateProvider } from './stateProvider';\nimport { getStateHookBuilder } from './statebuilders/onEnterExitRetain';\nimport { Ng1LocationServices } from './locationServices';\nimport { UrlRouterProvider } from './urlRouterProvider';\nangular.module('ui.router.angular1', []);\nvar mod_init = angular.module('ui.router.init', ['ng']);\nvar mod_util = angular.module('ui.router.util', ['ui.router.init']);\nvar mod_rtr = angular.module('ui.router.router', ['ui.router.util']);\nvar mod_state = angular.module('ui.router.state', ['ui.router.router', 'ui.router.util', 'ui.router.angular1']);\nvar mod_main = angular.module('ui.router', ['ui.router.init', 'ui.router.state', 'ui.router.angular1']);\nvar mod_cmpt = angular.module('ui.router.compat', ['ui.router']);\nvar router = null;\n$uiRouterProvider.$inject = ['$locationProvider'];\n/** This angular 1 provider instantiates a Router and exposes its services via the angular injector */\n\nfunction $uiRouterProvider($locationProvider) {\n  // Create a new instance of the Router when the $uiRouterProvider is initialized\n  router = this.router = new UIRouter();\n  router.stateProvider = new StateProvider(router.stateRegistry, router.stateService); // Apply ng1 specific StateBuilder code for `views`, `resolve`, and `onExit/Retain/Enter` properties\n\n  router.stateRegistry.decorator('views', ng1ViewsBuilder);\n  router.stateRegistry.decorator('onExit', getStateHookBuilder('onExit'));\n  router.stateRegistry.decorator('onRetain', getStateHookBuilder('onRetain'));\n  router.stateRegistry.decorator('onEnter', getStateHookBuilder('onEnter'));\n\n  router.viewService._pluginapi._viewConfigFactory('ng1', getNg1ViewConfigFactory()); // Disable decoding of params by UrlMatcherFactory because $location already handles this\n\n\n  router.urlService.config._decodeParams = false;\n  var ng1LocationService = router.locationService = router.locationConfig = new Ng1LocationServices($locationProvider);\n  Ng1LocationServices.monkeyPatchPathParameterType(router); // backwards compat: also expose router instance as $uiRouterProvider.router\n\n  router['router'] = router;\n  router['$get'] = $get;\n  $get.$inject = ['$location', '$browser', '$window', '$sniffer', '$rootScope', '$http', '$templateCache'];\n\n  function $get($location, $browser, $window, $sniffer, $rootScope, $http, $templateCache) {\n    ng1LocationService._runtimeServices($rootScope, $location, $sniffer, $browser, $window);\n\n    delete router['router'];\n    delete router['$get'];\n    return router;\n  }\n\n  return router;\n}\n\nvar getProviderFor = function (serviceName) {\n  return ['$uiRouterProvider', function ($urp) {\n    var service = $urp.router[serviceName];\n\n    service['$get'] = function () {\n      return service;\n    };\n\n    return service;\n  }];\n}; // This effectively calls $get() on `$uiRouterProvider` to trigger init (when ng enters runtime)\n\n\nrunBlock.$inject = ['$injector', '$q', '$uiRouter'];\n\nfunction runBlock($injector, $q, $uiRouter) {\n  services.$injector = $injector;\n  services.$q = $q; // https://github.com/angular-ui/ui-router/issues/3678\n\n  if (!Object.prototype.hasOwnProperty.call($injector, 'strictDi')) {\n    try {\n      $injector.invoke(function (checkStrictDi) {});\n    } catch (error) {\n      $injector.strictDi = !!/strict mode/.exec(error && error.toString());\n    }\n  } // The $injector is now available.\n  // Find any resolvables that had dependency annotation deferred\n\n\n  $uiRouter.stateRegistry.get().map(function (x) {\n    return x.$$state().resolvables;\n  }).reduce(unnestR, []).filter(function (x) {\n    return x.deps === 'deferred';\n  }).forEach(function (resolvable) {\n    return resolvable.deps = $injector.annotate(resolvable.resolveFn, $injector.strictDi);\n  });\n} // $urlRouter service and $urlRouterProvider\n\n\nvar getUrlRouterProvider = function (uiRouter) {\n  return uiRouter.urlRouterProvider = new UrlRouterProvider(uiRouter);\n}; // $state service and $stateProvider\n// $urlRouter service and $urlRouterProvider\n\n\nvar getStateProvider = function () {\n  return extend(router.stateProvider, {\n    $get: function () {\n      return router.stateService;\n    }\n  });\n};\n\nwatchDigests.$inject = ['$rootScope'];\nexport function watchDigests($rootScope) {\n  $rootScope.$watch(function () {\n    trace.approximateDigests++;\n  });\n}\nmod_init.provider('$uiRouter', $uiRouterProvider);\nmod_rtr.provider('$urlRouter', ['$uiRouterProvider', getUrlRouterProvider]);\nmod_util.provider('$urlService', getProviderFor('urlService'));\nmod_util.provider('$urlMatcherFactory', ['$uiRouterProvider', function () {\n  return router.urlMatcherFactory;\n}]);\nmod_util.provider('$templateFactory', function () {\n  return new TemplateFactory();\n});\nmod_state.provider('$stateRegistry', getProviderFor('stateRegistry'));\nmod_state.provider('$uiRouterGlobals', getProviderFor('globals'));\nmod_state.provider('$transitions', getProviderFor('transitionService'));\nmod_state.provider('$state', ['$uiRouterProvider', getStateProvider]);\nmod_state.factory('$stateParams', ['$uiRouter', function ($uiRouter) {\n  return $uiRouter.globals.params;\n}]);\nmod_main.factory('$view', function () {\n  return router.viewService;\n});\nmod_main.service('$trace', function () {\n  return trace;\n});\nmod_main.run(watchDigests);\nmod_util.run(['$urlMatcherFactory', function ($urlMatcherFactory) {}]);\nmod_state.run(['$state', function ($state) {}]);\nmod_rtr.run(['$urlRouter', function ($urlRouter) {}]);\nmod_init.run(runBlock);\n/** @hidden TODO: find a place to move this */\n\nexport var getLocals = function (ctx) {\n  var tokens = ctx.getTokens().filter(isString);\n  var tuples = tokens.map(function (key) {\n    var resolvable = ctx.getResolvable(key);\n    var waitPolicy = ctx.getPolicy(resolvable).async;\n    return [key, waitPolicy === 'NOWAIT' ? resolvable.promise : resolvable.data];\n  });\n  return tuples.reduce(applyPairs, {});\n};","map":{"version":3,"mappings":"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","names":["ng","angular","services","applyPairs","isString","trace","extend","UIRouter","unnestR","ng1ViewsBuilder","getNg1ViewConfigFactory","TemplateFactory","StateProvider","getStateHookBuilder","Ng1LocationServices","UrlRouterProvider","module","mod_init","mod_util","mod_rtr","mod_state","mod_main","mod_cmpt","router","$uiRouterProvider","$inject","$locationProvider","stateProvider","stateRegistry","stateService","decorator","viewService","_pluginapi","_viewConfigFactory","urlService","config","_decodeParams","ng1LocationService","locationService","locationConfig","monkeyPatchPathParameterType","$get","$location","$browser","$window","$sniffer","$rootScope","$http","$templateCache","_runtimeServices","getProviderFor","serviceName","$urp","service","runBlock","$injector","$q","$uiRouter","Object","prototype","hasOwnProperty","call","invoke","checkStrictDi","error","strictDi","exec","toString","get","map","x","$$state","resolvables","reduce","filter","deps","forEach","resolvable","annotate","resolveFn","getUrlRouterProvider","uiRouter","urlRouterProvider","getStateProvider","watchDigests","$watch","approximateDigests","provider","urlMatcherFactory","factory","globals","params","run","$urlMatcherFactory","$state","$urlRouter","getLocals","ctx","tokens","getTokens","tuples","key","getResolvable","waitPolicy","getPolicy","async","promise","data"],"sources":["C:\\Users\\huang\\node_modules\\@uirouter\\angularjs\\lib-esm\\@uirouter\\angularjs\\services.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * # Angular 1 types\n *\n * UI-Router core provides various Typescript types which you can use for code completion and validating parameter values, etc.\n * The customizations to the core types for Angular UI-Router are documented here.\n *\n * The optional [[$resolve]] service is also documented here.\n *\n * @preferred @publicapi @module ng1\n */ /** */\nimport { ng as angular } from './angular';\nimport {\n  IRootScopeService,\n  IQService,\n  ILocationService,\n  ILocationProvider,\n  IHttpService,\n  ITemplateCacheService,\n} from 'angular';\nimport {\n  services,\n  applyPairs,\n  isString,\n  trace,\n  extend,\n  UIRouter,\n  StateService,\n  UrlRouter,\n  UrlMatcherFactory,\n  ResolveContext,\n  unnestR,\n  TypedMap,\n} from '@uirouter/core';\nimport { ng1ViewsBuilder, getNg1ViewConfigFactory } from './statebuilders/views';\nimport { TemplateFactory } from './templateFactory';\nimport { StateProvider } from './stateProvider';\nimport { getStateHookBuilder } from './statebuilders/onEnterExitRetain';\nimport { Ng1LocationServices } from './locationServices';\nimport { UrlRouterProvider } from './urlRouterProvider';\nimport IInjectorService = angular.auto.IInjectorService;\n\nangular.module('ui.router.angular1', []);\nconst mod_init = angular.module('ui.router.init', ['ng']);\nconst mod_util = angular.module('ui.router.util', ['ui.router.init']);\nconst mod_rtr = angular.module('ui.router.router', ['ui.router.util']);\nconst mod_state = angular.module('ui.router.state', ['ui.router.router', 'ui.router.util', 'ui.router.angular1']);\nconst mod_main = angular.module('ui.router', ['ui.router.init', 'ui.router.state', 'ui.router.angular1']);\nconst mod_cmpt = angular.module('ui.router.compat', ['ui.router']);\n\ndeclare module '@uirouter/core/lib/router' {\n  interface UIRouter {\n    /** @hidden */\n    stateProvider: StateProvider;\n    /** @hidden */\n    urlRouterProvider: UrlRouterProvider;\n  }\n}\n\nlet router: UIRouter = null;\n\n$uiRouterProvider.$inject = ['$locationProvider'];\n/** This angular 1 provider instantiates a Router and exposes its services via the angular injector */\nfunction $uiRouterProvider($locationProvider: ILocationProvider) {\n  // Create a new instance of the Router when the $uiRouterProvider is initialized\n  router = this.router = new UIRouter();\n  router.stateProvider = new StateProvider(router.stateRegistry, router.stateService);\n\n  // Apply ng1 specific StateBuilder code for `views`, `resolve`, and `onExit/Retain/Enter` properties\n  router.stateRegistry.decorator('views', ng1ViewsBuilder);\n  router.stateRegistry.decorator('onExit', getStateHookBuilder('onExit'));\n  router.stateRegistry.decorator('onRetain', getStateHookBuilder('onRetain'));\n  router.stateRegistry.decorator('onEnter', getStateHookBuilder('onEnter'));\n\n  router.viewService._pluginapi._viewConfigFactory('ng1', getNg1ViewConfigFactory());\n\n  // Disable decoding of params by UrlMatcherFactory because $location already handles this\n  router.urlService.config._decodeParams = false;\n\n  const ng1LocationService = (router.locationService = router.locationConfig = new Ng1LocationServices(\n    $locationProvider\n  ));\n\n  Ng1LocationServices.monkeyPatchPathParameterType(router);\n\n  // backwards compat: also expose router instance as $uiRouterProvider.router\n  router['router'] = router;\n  router['$get'] = $get;\n  $get.$inject = ['$location', '$browser', '$window', '$sniffer', '$rootScope', '$http', '$templateCache'];\n  function $get(\n    $location: ILocationService,\n    $browser: any,\n    $window: any,\n    $sniffer: any,\n    $rootScope: ng.IScope,\n    $http: IHttpService,\n    $templateCache: ITemplateCacheService\n  ) {\n    ng1LocationService._runtimeServices($rootScope, $location, $sniffer, $browser, $window);\n    delete router['router'];\n    delete router['$get'];\n    return router;\n  }\n  return router;\n}\n\nconst getProviderFor = (serviceName) => [\n  '$uiRouterProvider',\n  ($urp) => {\n    const service = $urp.router[serviceName];\n    service['$get'] = () => service;\n    return service;\n  },\n];\n\n// This effectively calls $get() on `$uiRouterProvider` to trigger init (when ng enters runtime)\nrunBlock.$inject = ['$injector', '$q', '$uiRouter'];\nfunction runBlock($injector: IInjectorService, $q: IQService, $uiRouter: UIRouter) {\n  services.$injector = $injector;\n  services.$q = <any>$q;\n\n  // https://github.com/angular-ui/ui-router/issues/3678\n  if (!Object.prototype.hasOwnProperty.call($injector, 'strictDi')) {\n    try {\n      $injector.invoke(function (checkStrictDi) {});\n    } catch (error) {\n      $injector.strictDi = !!/strict mode/.exec(error && error.toString());\n    }\n  }\n\n  // The $injector is now available.\n  // Find any resolvables that had dependency annotation deferred\n  $uiRouter.stateRegistry\n    .get()\n    .map((x) => x.$$state().resolvables)\n    .reduce(unnestR, [])\n    .filter((x) => x.deps === 'deferred')\n    .forEach((resolvable) => (resolvable.deps = $injector.annotate(resolvable.resolveFn, $injector.strictDi)));\n}\n\n// $urlRouter service and $urlRouterProvider\nconst getUrlRouterProvider = (uiRouter: UIRouter) => (uiRouter.urlRouterProvider = new UrlRouterProvider(uiRouter));\n\n// $state service and $stateProvider\n// $urlRouter service and $urlRouterProvider\nconst getStateProvider = () => extend(router.stateProvider, { $get: () => router.stateService });\n\nwatchDigests.$inject = ['$rootScope'];\nexport function watchDigests($rootScope: IRootScopeService) {\n  $rootScope.$watch(function () {\n    trace.approximateDigests++;\n  });\n}\n\nmod_init.provider('$uiRouter', <any>$uiRouterProvider);\nmod_rtr.provider('$urlRouter', ['$uiRouterProvider', getUrlRouterProvider]);\nmod_util.provider('$urlService', getProviderFor('urlService'));\nmod_util.provider('$urlMatcherFactory', ['$uiRouterProvider', () => router.urlMatcherFactory]);\nmod_util.provider('$templateFactory', () => new TemplateFactory());\nmod_state.provider('$stateRegistry', getProviderFor('stateRegistry'));\nmod_state.provider('$uiRouterGlobals', getProviderFor('globals'));\nmod_state.provider('$transitions', getProviderFor('transitionService'));\nmod_state.provider('$state', ['$uiRouterProvider', getStateProvider]);\n\nmod_state.factory('$stateParams', ['$uiRouter', ($uiRouter: UIRouter) => $uiRouter.globals.params]);\nmod_main.factory('$view', () => router.viewService);\nmod_main.service('$trace', () => trace);\n\nmod_main.run(watchDigests);\nmod_util.run(['$urlMatcherFactory', function ($urlMatcherFactory: UrlMatcherFactory) {}]);\nmod_state.run(['$state', function ($state: StateService) {}]);\nmod_rtr.run(['$urlRouter', function ($urlRouter: UrlRouter) {}]);\nmod_init.run(runBlock);\n\n/** @hidden TODO: find a place to move this */\nexport const getLocals = (ctx: ResolveContext): TypedMap<any> => {\n  const tokens = ctx.getTokens().filter(isString);\n\n  const tuples = tokens.map((key) => {\n    const resolvable = ctx.getResolvable(key);\n    const waitPolicy = ctx.getPolicy(resolvable).async;\n    return [key, waitPolicy === 'NOWAIT' ? resolvable.promise : resolvable.data];\n  });\n\n  return tuples.reduce(applyPairs, {});\n};\n"]},"metadata":{},"sourceType":"module"}