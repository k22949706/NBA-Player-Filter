{"ast":null,"code":"/**\n * # Transition tracing (debug)\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"@uirouter/core\").trace;\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"@uirouter/core\"].trace;\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @packageDocumentation\n */\nimport { parse } from '../common/hof';\nimport { isNumber } from '../common/predicates';\nimport { stringify, functionToString, maxLength, padString } from './strings';\nimport { safeConsole } from './safeConsole';\n\nfunction uiViewString(uiview) {\n  if (!uiview) return 'ui-view (defunct)';\n  var state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n  return \"[ui-view#\" + uiview.id + \" \" + uiview.$type + \":\" + uiview.fqn + \" (\" + uiview.name + \"@\" + state + \")]\";\n}\n\nvar viewConfigString = function (viewConfig) {\n  var view = viewConfig.viewDecl;\n  var state = view.$context.name || '(root)';\n  return \"[View#\" + viewConfig.$id + \" from '\" + state + \"' state]: target ui-view: '\" + view.$uiViewName + \"@\" + view.$uiViewContextAnchor + \"'\";\n};\n\nfunction normalizedCat(input) {\n  return isNumber(input) ? Category[input] : Category[Category[input]];\n}\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\n\n\nvar Category;\n\n(function (Category) {\n  Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n  Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n  Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n  Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n  Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n})(Category || (Category = {}));\n\nexport { Category };\n\nvar _tid = parse('$id');\n\nvar _rid = parse('router.$id');\n\nvar transLbl = function (trans) {\n  return \"Transition #\" + _tid(trans) + \"-\" + _rid(trans);\n};\n/**\n * Prints UI-Router Transition trace information to the console.\n */\n\n\nvar Trace =\n/** @class */\nfunction () {\n  /** @internal */\n  function Trace() {\n    /** @internal */\n    this._enabled = {};\n    this.approximateDigests = 0;\n  }\n  /** @internal */\n\n\n  Trace.prototype._set = function (enabled, categories) {\n    var _this = this;\n\n    if (!categories.length) {\n      categories = Object.keys(Category).map(function (k) {\n        return parseInt(k, 10);\n      }).filter(function (k) {\n        return !isNaN(k);\n      }).map(function (key) {\n        return Category[key];\n      });\n    }\n\n    categories.map(normalizedCat).forEach(function (category) {\n      return _this._enabled[category] = enabled;\n    });\n  };\n\n  Trace.prototype.enable = function () {\n    var categories = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      categories[_i] = arguments[_i];\n    }\n\n    this._set(true, categories);\n  };\n\n  Trace.prototype.disable = function () {\n    var categories = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      categories[_i] = arguments[_i];\n    }\n\n    this._set(false, categories);\n  };\n  /**\n   * Retrieves the enabled stateus of a [[Category]]\n   *\n   * ```js\n   * trace.enabled(\"VIEWCONFIG\"); // true or false\n   * ```\n   *\n   * @returns boolean true if the category is enabled\n   */\n\n\n  Trace.prototype.enabled = function (category) {\n    return !!this._enabled[normalizedCat(category)];\n  };\n  /** @internal called by ui-router code */\n\n\n  Trace.prototype.traceTransitionStart = function (trans) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(transLbl(trans) + \": Started  -> \" + stringify(trans));\n  };\n  /** @internal called by ui-router code */\n\n\n  Trace.prototype.traceTransitionIgnored = function (trans) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(transLbl(trans) + \": Ignored  <> \" + stringify(trans));\n  };\n  /** @internal called by ui-router code */\n\n\n  Trace.prototype.traceHookInvocation = function (step, trans, options) {\n    if (!this.enabled(Category.HOOK)) return;\n    var event = parse('traceData.hookType')(options) || 'internal',\n        context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown',\n        name = functionToString(step.registeredHook.callback);\n    safeConsole.log(transLbl(trans) + \":   Hook -> \" + event + \" context: \" + context + \", \" + maxLength(200, name));\n  };\n  /** @internal called by ui-router code */\n\n\n  Trace.prototype.traceHookResult = function (hookResult, trans, transitionOptions) {\n    if (!this.enabled(Category.HOOK)) return;\n    safeConsole.log(transLbl(trans) + \":   <- Hook returned: \" + maxLength(200, stringify(hookResult)));\n  };\n  /** @internal called by ui-router code */\n\n\n  Trace.prototype.traceResolvePath = function (path, when, trans) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    safeConsole.log(transLbl(trans) + \":         Resolving \" + path + \" (\" + when + \")\");\n  };\n  /** @internal called by ui-router code */\n\n\n  Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    safeConsole.log(transLbl(trans) + \":               <- Resolved  \" + resolvable + \" to: \" + maxLength(200, stringify(resolvable.data)));\n  };\n  /** @internal called by ui-router code */\n\n\n  Trace.prototype.traceError = function (reason, trans) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(transLbl(trans) + \": <- Rejected \" + stringify(trans) + \", reason: \" + reason);\n  };\n  /** @internal called by ui-router code */\n\n\n  Trace.prototype.traceSuccess = function (finalState, trans) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(transLbl(trans) + \": <- Success  \" + stringify(trans) + \", final state: \" + finalState.name);\n  };\n  /** @internal called by ui-router code */\n\n\n  Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n    if (extra === void 0) {\n      extra = '';\n    }\n\n    if (!this.enabled(Category.UIVIEW)) return;\n    safeConsole.log(\"ui-view: \" + padString(30, event) + \" \" + uiViewString(viewData) + extra);\n  };\n  /** @internal called by ui-router code */\n\n\n  Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUIViewEvent('Updating', viewData, \" with ViewConfig from context='\" + context + \"'\");\n  };\n  /** @internal called by ui-router code */\n\n\n  Trace.prototype.traceUIViewFill = function (viewData, html) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUIViewEvent('Fill', viewData, \" with: \" + maxLength(200, html));\n  };\n  /** @internal called by ui-router code */\n\n\n  Trace.prototype.traceViewSync = function (pairs) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    var uivheader = 'uiview component fqn';\n    var cfgheader = 'view config state (view name)';\n    var mapping = pairs.map(function (_a) {\n      var _b;\n\n      var uiView = _a.uiView,\n          viewConfig = _a.viewConfig;\n      var uiv = uiView && uiView.fqn;\n      var cfg = viewConfig && viewConfig.viewDecl.$context.name + \": (\" + viewConfig.viewDecl.$name + \")\";\n      return _b = {}, _b[uivheader] = uiv, _b[cfgheader] = cfg, _b;\n    }).sort(function (a, b) {\n      return (a[uivheader] || '').localeCompare(b[uivheader] || '');\n    });\n    safeConsole.table(mapping);\n  };\n  /** @internal called by ui-router code */\n\n\n  Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    safeConsole.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n  };\n  /** @internal called by ui-router code */\n\n\n  Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    safeConsole.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n  };\n\n  return Trace;\n}();\n\nexport { Trace };\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5);\n * ```\n */\n\nvar trace = new Trace();\nexport { trace };","map":{"version":3,"mappings":"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","names":["parse","isNumber","stringify","functionToString","maxLength","padString","safeConsole","uiViewString","uiview","state","creationContext","name","id","$type","fqn","viewConfigString","viewConfig","view","viewDecl","$context","$id","$uiViewName","$uiViewContextAnchor","normalizedCat","input","Category","_tid","_rid","transLbl","trans","approximateDigests","Trace","enabled","categories","length","Object","keys","map","k","filter","isNaN","key","forEach","category","_this","_enabled","_set","TRANSITION","log","step","options","HOOK","event","context","registeredHook","callback","hookResult","transitionOptions","path","when","RESOLVE","resolvable","data","reason","finalState","viewData","extra","UIVIEW","traceUIViewEvent","html","pairs","VIEWCONFIG","uivheader","cfgheader","mapping","_a","uiView","uiv","cfg","$name","_b","sort","a","b","localeCompare","table","trace"],"sources":["C:\\Users\\huang\\node_modules\\@uirouter\\core\\lib-esm\\common\\@uirouter\\core\\common\\trace.ts"],"sourcesContent":["/**\n * # Transition tracing (debug)\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"@uirouter/core\").trace;\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"@uirouter/core\"].trace;\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @packageDocumentation\n */\nimport { parse } from '../common/hof';\nimport { isNumber } from '../common/predicates';\nimport { Transition } from '../transition/transition';\nimport { ViewTuple } from '../view';\nimport { ActiveUIView, ViewConfig, ViewContext } from '../view/interface';\nimport { stringify, functionToString, maxLength, padString } from './strings';\nimport { safeConsole } from './safeConsole';\nimport { Resolvable } from '../resolve/resolvable';\nimport { PathNode } from '../path/pathNode';\nimport { PolicyWhen } from '../resolve/interface';\nimport { TransitionHook } from '../transition/transitionHook';\nimport { HookResult } from '../transition/interface';\nimport { StateObject } from '../state/stateObject';\n\nfunction uiViewString(uiview: ActiveUIView) {\n  if (!uiview) return 'ui-view (defunct)';\n  const state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n  return `[ui-view#${uiview.id} ${uiview.$type}:${uiview.fqn} (${uiview.name}@${state})]`;\n}\n\nconst viewConfigString = (viewConfig: ViewConfig) => {\n  const view = viewConfig.viewDecl;\n  const state = view.$context.name || '(root)';\n  return `[View#${viewConfig.$id} from '${state}' state]: target ui-view: '${view.$uiViewName}@${view.$uiViewContextAnchor}'`;\n};\n\nfunction normalizedCat(input: Category | string): string {\n  return isNumber(input) ? Category[input] : Category[Category[input]];\n}\n\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\nenum Category {\n  RESOLVE,\n  TRANSITION,\n  HOOK,\n  UIVIEW,\n  VIEWCONFIG,\n}\n\nexport { Category };\n\nconst _tid = parse('$id');\nconst _rid = parse('router.$id');\n\nconst transLbl = (trans) => `Transition #${_tid(trans)}-${_rid(trans)}`;\n\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nexport class Trace {\n  /** @internal */\n  approximateDigests: number;\n\n  /** @internal */\n  private _enabled: { [key: string]: boolean } = {};\n\n  /** @internal */\n  constructor() {\n    this.approximateDigests = 0;\n  }\n\n  /** @internal */\n  private _set(enabled: boolean, categories: Category[]) {\n    if (!categories.length) {\n      categories = <any>Object.keys(Category)\n        .map((k) => parseInt(k, 10))\n        .filter((k) => !isNaN(k))\n        .map((key) => Category[key]);\n    }\n    categories.map(normalizedCat).forEach((category) => (this._enabled[category] = enabled));\n  }\n\n  /**\n   * Enables a trace [[Category]]\n   *\n   * ```js\n   * trace.enable(\"TRANSITION\");\n   * ```\n   *\n   * @param categories categories to enable. If `categories` is omitted, all categories are enabled.\n   *        Also takes strings (category name) or ordinal (category position)\n   */\n  enable(...categories: (Category | string | number)[]);\n  enable(...categories: any[]) {\n    this._set(true, categories);\n  }\n  /**\n   * Disables a trace [[Category]]\n   *\n   * ```js\n   * trace.disable(\"VIEWCONFIG\");\n   * ```\n   *\n   * @param categories categories to disable. If `categories` is omitted, all categories are disabled.\n   *        Also takes strings (category name) or ordinal (category position)\n   */\n  disable(...categories: (Category | string | number)[]);\n  disable(...categories: any[]) {\n    this._set(false, categories);\n  }\n\n  /**\n   * Retrieves the enabled stateus of a [[Category]]\n   *\n   * ```js\n   * trace.enabled(\"VIEWCONFIG\"); // true or false\n   * ```\n   *\n   * @returns boolean true if the category is enabled\n   */\n  enabled(category: Category | string | number): boolean {\n    return !!this._enabled[normalizedCat(category)];\n  }\n\n  /** @internal called by ui-router code */\n  traceTransitionStart(trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(`${transLbl(trans)}: Started  -> ${stringify(trans)}`);\n  }\n\n  /** @internal called by ui-router code */\n  traceTransitionIgnored(trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(`${transLbl(trans)}: Ignored  <> ${stringify(trans)}`);\n  }\n\n  /** @internal called by ui-router code */\n  traceHookInvocation(step: TransitionHook, trans: Transition, options: any) {\n    if (!this.enabled(Category.HOOK)) return;\n    const event = parse('traceData.hookType')(options) || 'internal',\n      context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown',\n      name = functionToString((step as any).registeredHook.callback);\n    safeConsole.log(`${transLbl(trans)}:   Hook -> ${event} context: ${context}, ${maxLength(200, name)}`);\n  }\n\n  /** @internal called by ui-router code */\n  traceHookResult(hookResult: HookResult, trans: Transition, transitionOptions: any) {\n    if (!this.enabled(Category.HOOK)) return;\n    safeConsole.log(`${transLbl(trans)}:   <- Hook returned: ${maxLength(200, stringify(hookResult))}`);\n  }\n\n  /** @internal called by ui-router code */\n  traceResolvePath(path: PathNode[], when: PolicyWhen, trans?: Transition) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    safeConsole.log(`${transLbl(trans)}:         Resolving ${path} (${when})`);\n  }\n\n  /** @internal called by ui-router code */\n  traceResolvableResolved(resolvable: Resolvable, trans?: Transition) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    safeConsole.log(\n      `${transLbl(trans)}:               <- Resolved  ${resolvable} to: ${maxLength(200, stringify(resolvable.data))}`\n    );\n  }\n\n  /** @internal called by ui-router code */\n  traceError(reason: any, trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(`${transLbl(trans)}: <- Rejected ${stringify(trans)}, reason: ${reason}`);\n  }\n\n  /** @internal called by ui-router code */\n  traceSuccess(finalState: StateObject, trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(`${transLbl(trans)}: <- Success  ${stringify(trans)}, final state: ${finalState.name}`);\n  }\n\n  /** @internal called by ui-router code */\n  traceUIViewEvent(event: string, viewData: ActiveUIView, extra = '') {\n    if (!this.enabled(Category.UIVIEW)) return;\n    safeConsole.log(`ui-view: ${padString(30, event)} ${uiViewString(viewData)}${extra}`);\n  }\n\n  /** @internal called by ui-router code */\n  traceUIViewConfigUpdated(viewData: ActiveUIView, context: ViewContext) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUIViewEvent('Updating', viewData, ` with ViewConfig from context='${context}'`);\n  }\n\n  /** @internal called by ui-router code */\n  traceUIViewFill(viewData: ActiveUIView, html: string) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUIViewEvent('Fill', viewData, ` with: ${maxLength(200, html)}`);\n  }\n\n  /** @internal called by ui-router code */\n  traceViewSync(pairs: ViewTuple[]) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    const uivheader = 'uiview component fqn';\n    const cfgheader = 'view config state (view name)';\n    const mapping = pairs\n      .map(({ uiView, viewConfig }) => {\n        const uiv = uiView && uiView.fqn;\n        const cfg = viewConfig && `${viewConfig.viewDecl.$context.name}: (${viewConfig.viewDecl.$name})`;\n        return { [uivheader]: uiv, [cfgheader]: cfg };\n      })\n      .sort((a, b) => (a[uivheader] || '').localeCompare(b[uivheader] || ''));\n\n    safeConsole.table(mapping);\n  }\n\n  /** @internal called by ui-router code */\n  traceViewServiceEvent(event: string, viewConfig: ViewConfig) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    safeConsole.log(`VIEWCONFIG: ${event} ${viewConfigString(viewConfig)}`);\n  }\n\n  /** @internal called by ui-router code */\n  traceViewServiceUIViewEvent(event: string, viewData: ActiveUIView) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    safeConsole.log(`VIEWCONFIG: ${event} ${uiViewString(viewData)}`);\n  }\n}\n\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5);\n * ```\n */\nconst trace = new Trace();\nexport { trace };\n"]},"metadata":{},"sourceType":"module"}